# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
cache:
  paths:
  - vendor/
mirror:
  image: node:alpine
  before_script:
    # Install prerequisites
    - 'which ssh-agent || (apk update && apk add openssh-client git)'
  script:
    ## Import SSH key
    # Launch ssh-agent
    - eval $(ssh-agent -s)
    # Add private key from CI variable
    - echo "$GH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    # Create ~/.ssh folder if not exist
    - mkdir -p ~/.ssh
    # Restrict the folder privilege
    - chmod 700 ~/.ssh
    # Add GitHub key fingerprint
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    ## Update GitHub mirror
    # ssh connect to GitHub
    - ssh -T git@github.com || ":" # (workaround) force exit code 0
    # Add a new remote location called "mirror"
    - git remote add mirror git@github.com:abivia/hydration.git
    # Discard changes before checking out branch
    - git reset HEAD --hard
    # Push "master" branch
    - git checkout main && git push mirror main
    # Uncomment below to push other branch(es), change "branchX" according to your need
    #- git checkout branchX && git push mirror branchX
  rules:
    # Only trigger through push event in main branch
    - if: $CI_COMMIT_REF_NAME == "main" && $CI_PIPELINE_SOURCE =~ /^(push|web)/
      when: always
test:php7.4:
  interruptible: true
  except:
  - /-unstable$/
  image: php:7.4
  before_script:
  - apt-get update -yqq
  - apt-get install -yqq git libmcrypt-dev libpq-dev libcurl4-gnutls-dev libicu-dev
    libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev
    libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev
    libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev libyaml-dev libzip-dev
  - docker-php-ext-install bz2 curl gd intl json opcache xml zip
  - pecl install xdebug
  - docker-php-ext-enable xdebug
  - echo "xdebug.mode=coverage" >> /usr/local/etc/php/conf.d/xdebug.ini
  - cp composer-php74-ci.json composer.json
  - rm -f composer.lock
  - curl -sS https://getcomposer.org/installer | php
  - php composer.phar install
  script:
  - vendor/bin/phpunit --configuration configuration.xml --coverage-text --colors=never
test:php8.0:
  interruptible: true
  except:
    - /-unstable$/
  image: php:8.0
  before_script:
  - apt-get update -yqq
  - apt-get install -yqq git libmcrypt-dev libpq-dev libcurl4-gnutls-dev libicu-dev
    libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev
    libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev
    libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev libyaml-dev libzip-dev
  - docker-php-ext-install bz2 gd intl zip
  - pecl install xdebug
  - docker-php-ext-enable xdebug
  - echo "xdebug.mode=coverage" >> /usr/local/etc/php/conf.d/xdebug.ini
  - curl -sS https://getcomposer.org/installer | php
  - php composer.phar update
  script:
  - vendor/bin/phpunit --configuration configuration.xml --coverage-text --colors=never
stages:
- test
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
